-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.addresses
(
    address_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    title character varying COLLATE pg_catalog."default" NOT NULL,
    customer_id integer NOT NULL,
    country_id integer NOT NULL,
    CONSTRAINT addresses_pkey PRIMARY KEY (address_id)
);

CREATE TABLE IF NOT EXISTS public.basket_details
(
    basket_detail_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 6000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_id integer NOT NULL,
    quantity integer NOT NULL,
    basket_id integer NOT NULL,
    CONSTRAINT pk_basket_detail_id PRIMARY KEY (basket_detail_id)
        INCLUDE(basket_detail_id),
    CONSTRAINT unq_basket_id UNIQUE (basket_id)
        INCLUDE(basket_id)
);

CREATE TABLE IF NOT EXISTS public.baskets
(
    basket_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 4000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    customer_id integer NOT NULL,
    CONSTRAINT baskets_pkey PRIMARY KEY (basket_id)
);

CREATE TABLE IF NOT EXISTS public.brands
(
    brand_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT brands_pkey PRIMARY KEY (brand_id)
);

CREATE TABLE IF NOT EXISTS public.categories
(
    category_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    category_name character varying(30) COLLATE pg_catalog."default" NOT NULL,
    description text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pk_categories PRIMARY KEY (category_id)
);

CREATE TABLE IF NOT EXISTS public."categoryProduct"
(
    category_product_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 40 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    product_id integer NOT NULL,
    category_id integer NOT NULL,
    CONSTRAINT "categoryProduct_pkey" PRIMARY KEY (category_product_id)
);

CREATE TABLE IF NOT EXISTS public.cities
(
    city_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    city_name character varying COLLATE pg_catalog."default" NOT NULL,
    country_id integer,
    CONSTRAINT cities_pkey PRIMARY KEY (city_id)
);

CREATE TABLE IF NOT EXISTS public.colors
(
    color_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    color_name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT colors_pkey PRIMARY KEY (color_id)
);

CREATE TABLE IF NOT EXISTS public.countries
(
    country_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    country_name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT countries_pkey PRIMARY KEY (country_id)
);

CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 90 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    first_name character varying COLLATE pg_catalog."default" NOT NULL,
    last_name character varying COLLATE pg_catalog."default" NOT NULL,
    email character varying COLLATE pg_catalog."default" NOT NULL,
    phone_number character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT customers_pkey PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.deliveries
(
    delivery_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 2000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    order_id integer NOT NULL,
    shipping_company_id integer NOT NULL,
    CONSTRAINT deliveries_pkey PRIMARY KEY (delivery_id)
);

CREATE TABLE IF NOT EXISTS public."orderDetails"
(
    order_detail_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    order_id integer NOT NULL,
    product_id integer NOT NULL,
    CONSTRAINT "orderDetails_pkey" PRIMARY KEY (order_detail_id)
);

CREATE TABLE IF NOT EXISTS public.orders
(
    order_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 100 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    order_number integer NOT NULL,
    order_quantity integer NOT NULL,
    total_price money NOT NULL,
    customer_id integer NOT NULL,
    CONSTRAINT orders_pkey PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.payments
(
    payment_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    bank_name character varying COLLATE pg_catalog."default" NOT NULL,
    card_number character varying COLLATE pg_catalog."default" NOT NULL,
    order_id integer NOT NULL,
    CONSTRAINT payments_pkey PRIMARY KEY (payment_id)
);

CREATE TABLE IF NOT EXISTS public.product_infos
(
    product_info_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 50 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    brand_id integer NOT NULL,
    color_id integer NOT NULL,
    size_id integer NOT NULL,
    product_id integer NOT NULL,
    CONSTRAINT product_infos_pkey PRIMARY KEY (product_info_id)
);

CREATE TABLE IF NOT EXISTS public.products
(
    product_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 200 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    stock integer NOT NULL,
    unit_price money NOT NULL,
    CONSTRAINT products_pkey PRIMARY KEY (product_id)
);

CREATE TABLE IF NOT EXISTS public."shippingCompanies"
(
    shipping_company_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 3000 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    company_name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "shippingCompanies_pkey" PRIMARY KEY (shipping_company_id)
);

CREATE TABLE IF NOT EXISTS public.sizes
(
    size_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "number" character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT sizes_pkey PRIMARY KEY (size_id)
);

CREATE TABLE IF NOT EXISTS public.streets
(
    street_id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    street_name character varying COLLATE pg_catalog."default" NOT NULL,
    city_id integer NOT NULL,
    CONSTRAINT streets_pkey PRIMARY KEY (street_id)
);

ALTER TABLE IF EXISTS public.addresses
    ADD CONSTRAINT "FK_country_id" FOREIGN KEY (country_id)
    REFERENCES public.countries (country_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.basket_details
    ADD CONSTRAINT "FK_basket_id" FOREIGN KEY (basket_id)
    REFERENCES public.baskets (basket_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;
CREATE INDEX IF NOT EXISTS unq_basket_id
    ON public.basket_details(basket_id);


ALTER TABLE IF EXISTS public.basket_details
    ADD CONSTRAINT "FK_product_id" FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.baskets
    ADD CONSTRAINT "FK_customer_id" FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."categoryProduct"
    ADD CONSTRAINT "FK_category_id" FOREIGN KEY (category_id)
    REFERENCES public.categories (category_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."categoryProduct"
    ADD CONSTRAINT "FK_product_id" FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.cities
    ADD CONSTRAINT "FK_country_id" FOREIGN KEY (country_id)
    REFERENCES public.countries (country_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.deliveries
    ADD CONSTRAINT "FK_shipping_company_id" FOREIGN KEY (shipping_company_id)
    REFERENCES public."shippingCompanies" (shipping_company_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."orderDetails"
    ADD CONSTRAINT "FK_order_id" FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."orderDetails"
    ADD CONSTRAINT "FK_product_id" FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.orders
    ADD CONSTRAINT "FK_customer_id" FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.payments
    ADD CONSTRAINT "FK_order_id" FOREIGN KEY (order_id)
    REFERENCES public.orders (order_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.product_infos
    ADD CONSTRAINT "FK_brand_id" FOREIGN KEY (brand_id)
    REFERENCES public.brands (brand_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_infos
    ADD CONSTRAINT "FK_color_id" FOREIGN KEY (color_id)
    REFERENCES public.colors (color_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_infos
    ADD CONSTRAINT "FK_product_id" FOREIGN KEY (product_id)
    REFERENCES public.products (product_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.product_infos
    ADD CONSTRAINT "FK_size_id" FOREIGN KEY (size_id)
    REFERENCES public.sizes (size_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.streets
    ADD CONSTRAINT "FK_city_id" FOREIGN KEY (city_id)
    REFERENCES public.cities (city_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;